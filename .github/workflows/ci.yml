name: CI Workflow

on:
  push:
    branches:
      - develop

jobs:
  test-memory:
    runs-on: [self-hosted]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Find and test JPEG files
        run: |
          # Remplacer les fichiers corrompus
          for file in $(find . -name "*.jpg"); do
            if ! file "$file" | grep -q "JPEG image data"; then
              echo "File $file is corrupted. Replacing it."
              cp /Users/clementcoiffierabeille/memory/imgBackup/backup.jpg "$file"  # Chemin vers un JPEG de remplacement
            fi
          done

  build-memory:
    runs-on: [self-hosted]
    needs: test-memory
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t clem33950/memory .

  push-memory:
    runs-on: [self-hosted]
    needs: build-memory
    
    steps:
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u clem33950 --password-stdin
        
      - name: Push Docker image
        run: |
          docker push clem33950/memory

  deploy-memory:
    runs-on: [self-hosted]
    needs: push-memory
    
    steps:
      - name: SSH to deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: clementcoiffierabeille
          SERVER_IP: localhost
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem $SERVER_USER@$SERVER_IP "
            docker pull clem33950/memory &&
            docker run -d -p 80:80 clem33950/memory
          "

